/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class <TSUSharedResourceControllerDelegate>, NSCondition, NSObject<OS_dispatch_group>, NSString;

@interface TSUSharedResourceController : NSObject {
    struct { 
        unsigned int canWaitOnMainThread : 1; 
        unsigned int acquiresResourceAsynchronously : 1; 
        unsigned int hasResource : 1; 
    NSString *_UUID;
    NSObject<OS_dispatch_group> *_accessInProgressGroup;
    int _acquirerCount;
    <TSUSharedResourceControllerDelegate> *_delegate;
    } _flags;
    NSString *_hasResourceForThreadKey;
    id _resource;
    NSString *_resourceForThreadKey;
    NSCondition *_resourceLock;
    int _threadsAcquiringResourceCount;
    int _waitCount;
    NSCondition *_waitLock;
    NSObject<OS_dispatch_group> *_willEndAccessGroup;
}

@property(readonly) NSString * UUID;
@property BOOL canWaitOnMainThread;

- (void).cxx_destruct;
- (id)UUID;
- (void)acquireResourceWithLockAndPerformSynchronousAccessUsingBlock:(id)arg1;
- (BOOL)canWaitOnMainThread;
- (void)dealloc;
- (id)description;
- (void)didBeginAccessToResource:(id)arg1 isFromThreadWaitingToAcquireResource:(BOOL)arg2;
- (void)didBeginAccessToResource:(id)arg1;
- (id)init;
- (id)initWithName:(id)arg1 delegate:(id)arg2;
- (BOOL)performSynchronousAccessIfResourceIsAvailable:(BOOL)arg1 usingBlock:(id)arg2;
- (BOOL)performSynchronousAccessIfResourceIsAvailableUsingBlock:(id)arg1;
- (void)performSynchronousAccessUsingBlock:(id)arg1;
- (void)setCanWaitOnMainThread:(BOOL)arg1;
- (void)waitForResourceWithLockAndPerformSynchronousAccessUsingBlock:(id)arg1;
- (void)wakeUpAllThreadsWaitingForResourceWithLock;
- (void)willEndAccessToResource;
- (void)willEndAccessToResourceForcingToWaitForPendingAccesses:(BOOL)arg1;

@end
