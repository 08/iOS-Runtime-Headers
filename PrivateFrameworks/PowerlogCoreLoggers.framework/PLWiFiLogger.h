/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PowerlogCoreLoggers.framework/PowerlogCoreLoggers
 */

@class NSDictionary;

@interface PLWiFiLogger : PLLogger {
    struct timeval { 
        int tv_sec; 
        int tv_usec; 
    struct timeval { 
        int tv_sec; 
        int tv_usec; 
    } lastTimeSinceEpoch;
    unsigned int lastWoWTimestamp;
    NSDictionary *last_WiFi_ret;
    } nowTimeSinceEpoch;
    struct __WiFiDeviceClient { } *wifiDevice;
    struct __WiFiManagerClient { } *wifiManager;
}

@property struct __WiFiDeviceClient { }* wifiDevice;
@property struct __WiFiManagerClient { }* wifiManager;

- (void)addBasicLoggingToEntry:(id)arg1 withWifiProperties:(id)arg2;
- (void)addEnhancedLoggingToEntry:(id)arg1 withWifiProperties:(id)arg2;
- (void)addEnhancedWakeLoggingToEntry:(id)arg1 withData:(id)arg2 withReason:(id)arg3;
- (id)channelNumber;
- (int)compareMilliseconds:(unsigned int)arg1 to:(unsigned int)arg2 withThreshold:(unsigned int)arg3;
- (void)dealloc;
- (id)decodeEthertype:(unsigned short)arg1;
- (id)decodeWakeReason:(id)arg1;
- (id)decodeWifiEventLinkReason:(unsigned long)arg1;
- (id)decodeWifiEventStatus:(unsigned long)arg1;
- (BOOL)didWakeTooOften;
- (void)disableWiFiManagerLogging:(id)arg1;
- (void)enableWiFiManagerLogging;
- (void)findWiFiDevice;
- (id)generateWiFiModuleEntry;
- (void)handleWake:(id)arg1;
- (BOOL)hasWiFi;
- (id)init;
- (BOOL)isWiFiManagerLoggingEnabled;
- (BOOL)isWiFiPowered;
- (BOOL)isWiFiWakeup:(id)arg1;
- (BOOL)isWowEnabled;
- (BOOL)isWowSupported;
- (void)log;
- (void)logDataPacket:(id)arg1;
- (void)logNotification:(int)arg1;
- (void)logWiFiAvailableReason:(int)arg1 withSubReason:(int)arg2;
- (void)logWiFiModule;
- (void)logWiFiRSSI:(float)arg1 withRawvalue:(int)arg2;
- (void)logWifiDebugWithWifiProperties:(id)arg1;
- (void)logWifiWakeWithTime:(unsigned int)arg1 withData:(id)arg2 withReason:(id)arg3;
- (id)loggerFunctionCall:(short)arg1 withParameters:(id)arg2;
- (void)scheduleDisableWiFiManagerLogging;
- (void)setWifiDevice:(struct __WiFiDeviceClient { }*)arg1;
- (void)setWifiManager:(struct __WiFiManagerClient { }*)arg1;
- (id)ssidName;
- (struct __WiFiDeviceClient { }*)wifiDevice;
- (struct __WiFiManagerClient { }*)wifiManager;
- (id)wifiStatus;

@end
