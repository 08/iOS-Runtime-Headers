/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@class CKBalloonTextView, NSAttributedString;

@interface CKTextBalloonView : CKColoredBalloonView {
    NSAttributedString *_attributedText;
    BOOL _centerTextWhenSkinny;
    CKBalloonTextView *_textView;
}

@property(copy) NSAttributedString * attributedText;
@property BOOL centerTextWhenSkinny;
@property BOOL containsHyperlink;
@property(readonly) BOOL isInteractingWithLink;
@property(retain) CKBalloonTextView * textView;

- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_textFrameForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forceSkinny:(BOOL)arg2;
- (id)attributedText;
- (BOOL)centerTextWhenSkinny;
- (void)configureForMessagePart:(id)arg1;
- (BOOL)containsHyperlink;
- (void)dealloc;
- (id)description;
- (void)doubleTap:(id)arg1 forEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)isInteractingWithLink;
- (void)layoutSubviews;
- (void)longPress:(id)arg1 forEvent:(id)arg2;
- (void)prepareForDisplay;
- (void)prepareForReuse;
- (void)setAttributedText:(id)arg1;
- (void)setCenterTextWhenSkinny:(BOOL)arg1;
- (void)setContainsHyperlink:(BOOL)arg1;
- (void)setTextView:(id)arg1;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1 textAlignmentInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; }*)arg2;
- (void)tap:(id)arg1 forEvent:(id)arg2;
- (id)textView;
- (float)textViewOffsetBetweenNormalAndSkinny:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (float)textViewWidthForWidth:(float)arg1;
- (void)touchCanceled:(id)arg1;
- (void)touchDown:(id)arg1 forEvent:(id)arg2;
- (void)touchDraggedInside:(id)arg1 forEvent:(id)arg2;
- (void)touchUpInside:(id)arg1 forEvent:(id)arg2;
- (void)touchUpOutside:(id)arg1 forEvent:(id)arg2;

@end
