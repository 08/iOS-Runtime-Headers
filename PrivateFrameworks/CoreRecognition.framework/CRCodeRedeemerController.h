/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreRecognition.framework/CoreRecognition
 */

@class <CRCodeRedeemerControllerDelegate>, CRBoxLayer, CaptureSessionManager, DiagnosticHUDLayer, NSArray, NSDate, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSString, NSTimer, UIActivityIndicatorView, UITapGestureRecognizer;

@interface CRCodeRedeemerController : UIViewController <AVCaptureVideoDataOutputSampleBufferDelegate> {
    UIActivityIndicatorView *_activityIndicator;
    CRBoxLayer *_boxLayer;
    NSTimer *_boxLayerHideTimer;
    NSString *_cameraMode;
    int _cameraPosition;
    unsigned int _captureCount;
    BOOL _captureMode;
    BOOL _codeInverted;
    NSDate *_codePresented;
    float _configDemoSpeed;
    BOOL _configPresentCentered;
    <CRCodeRedeemerControllerDelegate> *_delegate;
    DiagnosticHUDLayer *_diagnosticHUDLayer;
    BOOL _didSendEndOrCancel;
    BOOL _didSendFindBox;
    int _exposureMode;
    int _focusMode;
    NSString *_foundCode;
    NSArray *_foundPoints;
    unsigned int _imagesToCapture;
    struct opaqueCMSampleBuffer { } *_lastBuffer;
    NSDate *_pointsFound;
    NSObject<OS_dispatch_semaphore> *_processingImage;
    NSObject<OS_dispatch_queue> *_processingQueue;
    CaptureSessionManager *_sessionManager;
    NSDate *_sessionStarted;
    double _sessionTimeout;
    BOOL _showDiagnosticHUD;
    UITapGestureRecognizer *_tapGestureRecognizer;
    int _torchMode;
    int _whiteBalanceMode;
}

@property(retain) UIActivityIndicatorView * activityIndicator;
@property(retain) CRBoxLayer * boxLayer;
@property(retain) NSTimer * boxLayerHideTimer;
@property(copy) NSString * cameraMode;
@property int cameraPosition;
@property unsigned int captureCount;
@property(getter=isCaptureMode) BOOL captureMode;
@property BOOL codeInverted;
@property(retain) NSDate * codePresented;
@property float configDemoSpeed;
@property BOOL configPresentCentered;
@property <CRCodeRedeemerControllerDelegate> * delegate;
@property(retain) DiagnosticHUDLayer * diagnosticHUDLayer;
@property BOOL didSendEndOrCancel;
@property BOOL didSendFindBox;
@property int exposureMode;
@property int focusMode;
@property(retain) NSString * foundCode;
@property(retain) NSArray * foundPoints;
@property unsigned int imagesToCapture;
@property struct opaqueCMSampleBuffer { }* lastBuffer;
@property(retain) NSDate * pointsFound;
@property(retain) NSObject<OS_dispatch_semaphore> * processingImage;
@property(retain) NSObject<OS_dispatch_queue> * processingQueue;
@property(retain) CaptureSessionManager * sessionManager;
@property(retain) NSDate * sessionStarted;
@property double sessionTimeout;
@property BOOL showDiagnosticHUD;
@property(retain) UITapGestureRecognizer * tapGestureRecognizer;
@property int torchMode;
@property int whiteBalanceMode;

+ (id)findCodeInImage:(struct vImage_Buffer { void *x1; unsigned int x2; unsigned int x3; unsigned int x4; })arg1 maxStage:(unsigned int)arg2;
+ (unsigned int)isCRCodeRedeemerAvailable;
+ (void)loadFonts;

- (void).cxx_destruct;
- (id)activityIndicator;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(int)arg2;
- (void)animatePresentCode;
- (id)boxLayer;
- (id)boxLayerHideTimer;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })boxLayerPresentationFrame;
- (id)cameraMode;
- (int)cameraPosition;
- (void)cancel;
- (unsigned int)captureCount;
- (void)captureImageFromSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 fromConnection:(id)arg3;
- (BOOL)codeInverted;
- (id)codePresented;
- (float)configDemoSpeed;
- (BOOL)configPresentCentered;
- (id)delegate;
- (id)diagnosticHUDLayer;
- (void)didReceiveMemoryWarning;
- (BOOL)didSendEndOrCancel;
- (BOOL)didSendFindBox;
- (int)exposureMode;
- (void)findCodeInSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (int)focusMode;
- (id)foundCode;
- (id)foundPoints;
- (id)generateStringFromDate:(id)arg1;
- (void)handleTapFrom:(id)arg1;
- (void)hideBoxLayer;
- (unsigned int)imagesToCapture;
- (id)init;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (BOOL)isCaptureMode;
- (struct opaqueCMSampleBuffer { }*)lastBuffer;
- (void)loadView;
- (void)pauseBoxLayerHideTimer;
- (id)pointsFound;
- (void)primeBoxLayerHideTimer;
- (id)processingImage;
- (id)processingQueue;
- (void)removeLayerTree;
- (void)sendDidCancel;
- (void)sendDidDisplayMessageStyle:(unsigned int)arg1;
- (void)sendDidEndWithErrorDomain:(id)arg1 code:(int)arg2 userInfo:(id)arg3;
- (void)sendDidEndWithInfo:(id)arg1;
- (void)sendDidFindBox;
- (id)sessionManager;
- (id)sessionStarted;
- (double)sessionTimeout;
- (void)setActivityIndicator:(id)arg1;
- (void)setBoxLayer:(id)arg1;
- (void)setBoxLayerHideTimer:(id)arg1;
- (void)setCameraMode:(id)arg1;
- (void)setCameraPosition:(int)arg1;
- (void)setCaptureCount:(unsigned int)arg1;
- (void)setCaptureMode:(BOOL)arg1;
- (void)setCodeInverted:(BOOL)arg1;
- (void)setCodePresented:(id)arg1;
- (void)setConfigDemoSpeed:(float)arg1;
- (void)setConfigPresentCentered:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDiagnosticHUDLayer:(id)arg1;
- (void)setDidSendEndOrCancel:(BOOL)arg1;
- (void)setDidSendFindBox:(BOOL)arg1;
- (void)setExposureMode:(int)arg1;
- (void)setFocusMode:(int)arg1;
- (void)setFoundCode:(id)arg1;
- (void)setFoundPoints:(id)arg1;
- (void)setImagesToCapture:(unsigned int)arg1;
- (void)setLastBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)setPointsFound:(id)arg1;
- (void)setProcessingImage:(id)arg1;
- (void)setProcessingQueue:(id)arg1;
- (void)setSessionManager:(id)arg1;
- (void)setSessionStarted:(id)arg1;
- (void)setSessionTimeout:(double)arg1;
- (void)setShowDiagnosticHUD:(BOOL)arg1;
- (void)setTapGestureRecognizer:(id)arg1;
- (void)setTorchMode:(int)arg1;
- (void)setWhiteBalanceMode:(int)arg1;
- (BOOL)showDiagnosticHUD;
- (void)showMessage:(id)arg1 color:(id)arg2 style:(unsigned int)arg3 duration:(double)arg4;
- (void)startSession;
- (void)stopSession;
- (id)tapGestureRecognizer;
- (void)toggleCamera;
- (int)torchMode;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidLayoutSubviews;
- (int)whiteBalanceMode;
- (void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2;

@end
