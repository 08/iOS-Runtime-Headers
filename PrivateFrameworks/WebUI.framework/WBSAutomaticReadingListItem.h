/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 */

@class NSDate, NSString, NSURL, UIImage, WBSAutomaticReadingListSocialSource;

@interface WBSAutomaticReadingListItem : NSObject {
    BOOL _fetchingProfileImage;
    NSString *_originatorDisplayName;
    id _originatorID;
    UIImage *_originatorProfileImage;
    BOOL _repostedByAuthenticatedUser;
    NSString *_reposterDisplayName;
    NSString *_reposterScreenName;
    NSString *_socialSourceAccountIdentifier;
    NSDate *_sourceRecordCreationDate;
    id _sourceRecordID;
    NSString *_sourceRecordText;
    NSString *_uniqueIdentifier;
    NSString *_urlString;
}

@property(readonly) NSURL * biggerOriginatorProfileImageURL;
@property(readonly) NSString * displayString;
@property(readonly) struct _NSRange { unsigned int x1; unsigned int x2; } displayURLRange;
@property(readonly) NSString * domainString;
@property BOOL fetchingProfileImage;
@property(readonly) NSString * originatorDisplayName;
@property(readonly) id originatorID;
@property(retain) UIImage * originatorProfileImage;
@property(readonly) NSURL * originatorProfileImageURL;
@property(readonly) NSURL * originatorProfileURL;
@property(getter=isRepostedByAuthenticatedUser) BOOL repostedByAuthenticatedUser;
@property(readonly) NSString * reposterDisplayName;
@property(readonly) NSString * reposterScreenName;
@property(readonly) WBSAutomaticReadingListSocialSource * socialSource;
@property(readonly) NSString * socialSourceAccountIdentifier;
@property(readonly) NSDate * sourceRecordCreationDate;
@property(readonly) id sourceRecordID;
@property(readonly) NSString * sourceRecordText;
@property(readonly) NSURL * sourceRecordURL;
@property(copy) NSString * uniqueIdentifier;
@property(readonly) NSString * urlString;

+ (id)keyPathsForValuesAffectingDomainString;

- (void)_fetchOriginatorProfileImageForSize:(struct CGSize { float x1; float x2; })arg1;
- (id)bestOriginatorProfileImageForSize:(struct CGSize { float x1; float x2; })arg1;
- (id)biggerOriginatorProfileImageURL;
- (void)dealloc;
- (id)description;
- (id)displayString;
- (struct _NSRange { unsigned int x1; unsigned int x2; })displayURLRange;
- (id)domainString;
- (BOOL)fetchingProfileImage;
- (unsigned int)hash;
- (id)initWithDictionary:(id)arg1 socialSourceAccountIdentifier:(id)arg2;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isRepostedByAuthenticatedUser;
- (id)originatorDisplayName;
- (id)originatorID;
- (id)originatorProfileImage;
- (id)originatorProfileImageURL;
- (id)originatorProfileURL;
- (id)reposterDisplayName;
- (id)reposterScreenName;
- (void)setFetchingProfileImage:(BOOL)arg1;
- (void)setOriginatorProfileImage:(id)arg1;
- (void)setRepostedByAuthenticatedUser:(BOOL)arg1;
- (void)setUniqueIdentifier:(id)arg1;
- (id)socialSource;
- (id)socialSourceAccountIdentifier;
- (id)sourceRecordCreationDate;
- (id)sourceRecordID;
- (id)sourceRecordText;
- (id)sourceRecordURL;
- (id)uniqueIdentifier;
- (id)urlString;

@end
