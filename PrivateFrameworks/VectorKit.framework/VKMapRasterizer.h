/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@class NSMutableSet, VGLTextureCanvas, VGLTexturePool, VKCamera, VKLayoutContext, VKMapModel, VKModelObject, VKScene, VKTileProvider;

@interface VKMapRasterizer : VKModelObject {
    struct VKTileKey { 
        unsigned int z; 
        int x; 
        int y; 
        unsigned int pointSize; 
    struct _VGLColor { 
        float r; 
        float g; 
        float b; 
        float a; 
    } _backgroundColor;
    } _keyToRasterize;
    VKMapModel *_mapModel;
    VGLTexturePool *_pool;
    VKCamera *_rasterizeCamera;
    VGLTextureCanvas *_rasterizeCanvas;
    VKLayoutContext *_rasterizeLayoutContext;
    VKScene *_rasterizeScene;
    NSMutableSet *_rasterizeTilesToRender;
    unsigned int _rasterizingScaleFactor;
    VKModelObject *_root;
    VKTileProvider *_tileProvider;
}

@property struct _VGLColor { float x1; float x2; float x3; float x4; } backgroundColor;
@property(readonly) const struct VKTileKey { unsigned int x1; int x2; int x3; unsigned int x4; }* keyToRasterize;
@property VKMapModel * mapModel;
@property unsigned int rasterizingScaleFactor;
@property VKTileProvider * tileProvider;

- (id).cxx_construct;
- (void)addSubmodel:(id)arg1;
- (struct _VGLColor { float x1; float x2; float x3; float x4; })backgroundColor;
- (void)dealloc;
- (void)drawScene:(id)arg1 withContext:(id)arg2;
- (void)flushTextureCache;
- (id)init;
- (const struct VKTileKey { unsigned int x1; int x2; int x3; unsigned int x4; }*)keyToRasterize;
- (void)layoutScene:(id)arg1 withContext:(id)arg2;
- (id)mapModel;
- (void)rasterizeKey:(const struct VKTileKey { unsigned int x1; int x2; int x3; unsigned int x4; }*)arg1 scene:(id)arg2;
- (unsigned int)rasterizingScaleFactor;
- (void)recursiveDrawScene:(id)arg1 withContext:(id)arg2 pass:(unsigned int)arg3;
- (void)setBackgroundColor:(struct _VGLColor { float x1; float x2; float x3; float x4; })arg1;
- (void)setMapModel:(id)arg1;
- (void)setRasterizingScaleFactor:(unsigned int)arg1;
- (void)setTileProvider:(id)arg1;
- (unsigned int)supportedRenderPasses;
- (id)tileProvider;

@end
