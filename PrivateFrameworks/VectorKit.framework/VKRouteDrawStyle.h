/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@class NSString;

@interface VKRouteDrawStyle : VKDrawStyle {
    struct _VGLColor { 
        float r; 
        float g; 
        float b; 
        float a; 
    struct _VGLColor { 
        float r; 
        float g; 
        float b; 
        float a; 
    struct _VGLColor { 
        float r; 
        float g; 
        float b; 
        float a; 
    struct _VGLColor { 
        float r; 
        float g; 
        float b; 
        float a; 
    float _arrowMinZoom;
    float _brightness;
    float _enlargementMaxScale;
    float _enlargementScale;
    float _enlargementStartZoom;
    } _fillColor;
    } _glossColor;
    BOOL _hasBrightness;
    NSString *_obscuredTexture;
    float _selectedArrowMinZoom;
    } _strokeColor;
    float _strokeWidth;
    NSString *_texture;
    } _travelledColor;
    NSString *_travelledTexture;
    float _width;
}

@property(readonly) float arrowMinZoom;
@property(readonly) float brightness;
@property(readonly) float enlargementMaxScale;
@property(readonly) float enlargementScale;
@property(readonly) float enlargementStartZoom;
@property(readonly) struct _VGLColor { float x1; float x2; float x3; float x4; } fillColor;
@property(readonly) struct _VGLColor { float x1; float x2; float x3; float x4; } glossColor;
@property(readonly) BOOL hasBrightness;
@property(readonly) NSString * obscuredTexture;
@property(readonly) float selectedArrowMinZoom;
@property(readonly) struct _VGLColor { float x1; float x2; float x3; float x4; } strokeColor;
@property(readonly) float strokeWidth;
@property(readonly) NSString * texture;
@property(readonly) struct _VGLColor { float x1; float x2; float x3; float x4; } travelledColor;
@property(readonly) NSString * travelledTexture;
@property(readonly) float width;

- (id).cxx_construct;
- (float)arrowMinZoom;
- (float)brightness;
- (void)dealloc;
- (float)enlargementMaxScale;
- (float)enlargementScale;
- (float)enlargementStartZoom;
- (struct _VGLColor { float x1; float x2; float x3; float x4; })fillColor;
- (struct _VGLColor { float x1; float x2; float x3; float x4; })glossColor;
- (BOOL)hasBrightness;
- (id)obscuredTexture;
- (float)selectedArrowMinZoom;
- (struct _VGLColor { float x1; float x2; float x3; float x4; })strokeColor;
- (float)strokeWidth;
- (void)takeFromStyleProperties:(id)arg1 atZoom:(unsigned int)arg2 globals:(id)arg3;
- (void)takeFromZoomInvariantProperties:(id)arg1;
- (id)texture;
- (struct _VGLColor { float x1; float x2; float x3; float x4; })travelledColor;
- (id)travelledTexture;
- (id)variant;
- (float)width;

@end
