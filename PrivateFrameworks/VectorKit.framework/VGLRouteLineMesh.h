/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@class VGLCenterLineMeshVendor, VGLRouteLineArrowMesh, VGLTexture;

@interface VGLRouteLineMesh : VGLMesh {
    struct vector<VGLArrowMeshInfo, vk_allocator<VGLArrowMeshInfo> > { 
        struct { /* ? */ } *__begin_; 
        struct { /* ? */ } *__end_; 
        struct __compressed_pair<VGLArrowMeshInfo *, vk_allocator<VGLArrowMeshInfo> > { 
            struct { /* ? */ } *__first_; 
        } __end_cap_; 
    struct vector<routelineTrafficSegment, vk_allocator<routelineTrafficSegment> > { 
        struct routelineTrafficSegment {} *__begin_; 
        struct routelineTrafficSegment {} *__end_; 
        struct __compressed_pair<routelineTrafficSegment *, vk_allocator<routelineTrafficSegment> > { 
            struct routelineTrafficSegment {} *__first_; 
        } __end_cap_; 
    } _arrowInfos;
    VGLRouteLineArrowMesh *_arrowMesh;
    VGLCenterLineMeshVendor *_mediumTrafficMeshVendor;
    VGLCenterLineMeshVendor *_slowTrafficMeshVendor;
    float _splitLocation;
    VGLTexture *_texture;
    } _trafficSegments;
    int _z;
}

@property(readonly) VGLCenterLineMeshVendor * mediumTrafficMeshVendor;
@property(readonly) VGLCenterLineMeshVendor * slowTrafficMeshVendor;
@property float splitLocation;
@property(retain) VGLTexture * texture;
@property int z;

+ (float)arrowHeadSizeForRouteLineWidth:(float)arg1;
+ (float)arrowTailSizeForRouteLineWidth:(float)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)addArrowMeshInfo:(struct { int x1; int x2; float x3; int x4; float x5; })arg1;
- (void)buildArrowMeshWithCurrentManeuver:(int)arg1;
- (void)buildArrowWithArrowInfo:(const struct { int x1; int x2; float x3; int x4; float x5; }*)arg1;
- (void)dealloc;
- (void)drawArrows:(id)arg1;
- (void)drawTrianglesWithContext:(id)arg1 offset:(int)arg2 count:(int)arg3;
- (void)drawTrianglesWithContext:(id)arg1;
- (void)freeze;
- (BOOL)hasArrowMesh;
- (id)init;
- (id)initWithVertexCapacity:(int)arg1 indexCapacity:(int)arg2;
- (id)mediumTrafficMeshVendor;
- (void)pushArrowRangeStart:(int)arg1 startOffset:(float)arg2 end:(int)arg3 endOffset:(float)arg4 maneuverIndex:(int)arg5;
- (void)pushDebugArrowRangeStart:(int)arg1 startOffset:(float)arg2 end:(int)arg3 endOffset:(float)arg4 maneuverIndex:(int)arg5;
- (void)pushTrafficSpeed:(BOOL)arg1;
- (void)setSplitLocation:(float)arg1;
- (void)setTexture:(id)arg1;
- (void)setZ:(int)arg1;
- (id)slowTrafficMeshVendor;
- (float)splitLocation;
- (id)texture;
- (int)z;

@end
