/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Message.framework/Message
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class <MFDataConsumer>, MFAttachmentManager, MFMimePart, NSMutableDictionary, NSString, NSURL;

@interface MFAttachment : NSObject <QLPreviewItem> {
    MFAttachmentManager *_attachmentManager;
    <MFDataConsumer> *_customConsumer;
    unsigned int _decodedFileSize;
    NSString *_disposition;
    unsigned int _encodedFileSize;
    id _fetchCompletionBlock;
    id _fetchProgressBlock;
    BOOL _isDataAvailableLocally;
    BOOL _isUserFacing;
    unsigned int _lastProgressBytes;
    double _lastProgressTime;
    NSMutableDictionary *_metadata;
    NSString *_mimeType;
    MFMimePart *_part;
    NSString *_path;
    unsigned int _progressInterval;
    double _progressTimeInterval;
    NSURL *_url;
}

@property MFAttachmentManager * attachmentManager;
@property(readonly) NSString * contentID;
@property(retain) <MFDataConsumer> * customConsumer;
@property unsigned int decodedFileSize;
@property(copy) NSString * disposition;
@property unsigned int encodedFileSize;
@property(retain) NSString * eventID;
@property(copy) id fetchCompletionBlock;
@property(copy) id fetchProgressBlock;
@property(retain) NSString * fileName;
@property(retain) NSString * icsRepresentation;
@property(readonly) BOOL isContainedInRFC822;
@property(readonly) BOOL isDataAvailableLocally;
@property BOOL isUserFacing;
@property unsigned int lastProgressBytes;
@property double lastProgressTime;
@property(retain) NSString * meetingStorePersistentID;
@property(copy) NSString * mimeType;
@property(retain) MFMimePart * part;
@property(copy) NSString * path;
@property(readonly) NSString * previewItemTitle;
@property(readonly) NSURL * previewItemURL;
@property unsigned int progressInterval;
@property double progressTimeInterval;
@property(readonly) BOOL shouldAutoDownload;
@property(copy) NSURL * url;

- (id)_contentTypeByStrippingZipIfNeeded:(BOOL)arg1;
- (id)attachmentManager;
- (void)cancel;
- (id)contentID;
- (id)contentType;
- (id)customConsumer;
- (void)dealloc;
- (id)decodeFilterWithDataConsumer:(id)arg1;
- (unsigned int)decodedFileSize;
- (id)description;
- (id)disposition;
- (unsigned int)encodedFileSize;
- (id)eventID;
- (id)fetchCompletionBlock;
- (void)fetchData;
- (id)fetchDataSynchronously:(id*)arg1;
- (void)fetchDataSynchronously;
- (id)fetchProgressBlock;
- (id)fileAttributes;
- (id)fileName;
- (id)filenameStrippingZipIfNeededUseApplications:(BOOL)arg1;
- (BOOL)hasCalendarMetadata;
- (id)icsRepresentation;
- (id)initWithURL:(id)arg1 attachmentManager:(id)arg2;
- (BOOL)isCalendarFile;
- (BOOL)isContainedInRFC822;
- (BOOL)isContentOpenable;
- (BOOL)isContentTypeDisplayableByMobileMail;
- (BOOL)isDataAvailableLocally;
- (BOOL)isDisplayableByWebKit;
- (BOOL)isDisplayableImage;
- (BOOL)isDisplayableInline;
- (BOOL)isDisplayableInlineWithData:(id)arg1;
- (BOOL)isDisplayableInsidePlugin;
- (BOOL)isDisplayableInsidePluginWithData:(id)arg1;
- (BOOL)isImageFile;
- (BOOL)isMedia;
- (BOOL)isPDFFile;
- (BOOL)isPass;
- (BOOL)isRFC822;
- (BOOL)isRestrictedMIMEType;
- (BOOL)isUserFacing;
- (unsigned int)lastProgressBytes;
- (double)lastProgressTime;
- (id)meetingStorePersistentID;
- (id)metadataValueForKey:(id)arg1;
- (id)mimeType;
- (id)part;
- (id)pass;
- (id)path;
- (id)previewItemTitle;
- (id)previewItemURL;
- (unsigned int)progressInterval;
- (double)progressTimeInterval;
- (void)setAttachmentManager:(id)arg1;
- (void)setContentID:(id)arg1;
- (void)setCustomConsumer:(id)arg1;
- (void)setDecodedFileSize:(unsigned int)arg1;
- (void)setDisposition:(id)arg1;
- (void)setEncodedFileSize:(unsigned int)arg1;
- (void)setEventID:(id)arg1;
- (void)setFetchCompletionBlock:(id)arg1;
- (void)setFetchProgressBlock:(id)arg1;
- (void)setFileName:(id)arg1;
- (void)setIcsRepresentation:(id)arg1;
- (void)setIsUserFacing:(BOOL)arg1;
- (void)setLastProgressBytes:(unsigned int)arg1;
- (void)setLastProgressTime:(double)arg1;
- (void)setMeetingStorePersistentID:(id)arg1;
- (void)setMetadataValue:(id)arg1 forKey:(id)arg2;
- (void)setMimeType:(id)arg1;
- (void)setPart:(id)arg1;
- (void)setPath:(id)arg1;
- (void)setProgressInterval:(unsigned int)arg1;
- (void)setProgressTimeInterval:(double)arg1;
- (void)setUrl:(id)arg1;
- (BOOL)shouldAutoDownload;
- (id)storageLocationWithMessage:(id)arg1;
- (id)textEncodingGuessWithData:(id)arg1;
- (id)textEncodingNameForData:(id)arg1 mimeType:(id)arg2;
- (id)url;
- (void)writeToDiskWithData:(id)arg1;

@end
