/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@interface TileLayer : CALayer {
    unsigned int _paintCount;
    struct TileGrid { struct TileCache {} *x1; struct RetainPtr<CALayer> { struct CALayer { Class x_1_2_1; struct _CALayerIvars { int x_2_3_1; unsigned int x_2_3_2; void *x_2_3_3; void *x_2_3_4[8]; } x_1_2_2; } *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; struct HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::TileGridTile> > > { struct HashTable<WebCore::IntPoint, WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> > >, WTF::IntPointHash, WTF::HashMapValueTraits<WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::TileGridTile> > >, WTF::HashTraits<WebCore::IntPoint> > { struct KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_6_1_1; } x6; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_7_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_7_1_2; } x7; } *_tileGrid;
}

@property struct TileGrid { struct TileCache {} *x1; struct RetainPtr<CALayer> { struct CALayer { Class x_1_2_1; struct _CALayerIvars { int x_2_3_1; unsigned int x_2_3_2; void *x_2_3_3; void *x_2_3_4[8]; } x_1_2_2; } *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; /* Warning: unhandled struct encoding: '{HashMap<WebCore::IntPoint' */ struct x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; unsigned char x20; void*x21; long x22; long x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; unsigned int x35; void*x36; unsigned short x37; void*x38; void*x39; void*x40; int x41; void*x42; void*x43; void*x44; BOOL x45; void*x46; void*x47; void*x48; void*x49; void*x50; in void*x51; out void*x52; unsigned int x53/* : ? */; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; long x67; void*x68; BOOL x69; void*x70; unsigned char x71; void*x72; void*x73; const void*x74; BOOL x75; void*x76; void*x77; const short x78; unsigned int x79; in unsigned short x80; void*x81; long x82; void*x83; BOOL x84; void*x85; int x86; out in SEL x87; void*x88; int x89; void*x90; void*x91; unsigned short x92; void*x93; out const void*x94; void*x95; void*x96; SEL x97; void*x98; short x99; void*x100; void*x101; void*x102; short x103; void*x104; void*x105; void*x106; void*x107; long x108; void*x109; short x110; SEL x111; double x112; out long x113; BOOL x114; unsigned char x115; out in void*x116; void*x117; void*x118; void*x119; SEL x120; BOOL x121; void*x122; void*x123; in void*x124; void*x125; unsigned short x126; void*x127; short x128; short x129; int x130; out in SEL x131; void*x132; in double x133; out void*x134; const void*x135; in short x136; void*x137; BOOL x138; void*x139; int x140; out in SEL x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; unsigned short x164; void*x165; void*x166; void*x167; void*x168; void*x169; unsigned short x170; void*x171; void*x172; void*x173; out void*x174; const void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; const void*x184; void*x185; void*x186; in void*x187; short x188; void*x189; void*x190; void*x191; BOOL x192; void*x193; void*x194; void*x195; int x196; void*x197; out void*x198; in void*x199; bycopy void*x200; unsigned int x201/* : ? */; void*x202; void*x203; void*x204; void*x205; void*x206; BOOL x207; void*x208; void*x209; void*x210; void*x211; void*x212; struct x213; void*x214; }* tileGrid; /* unknown property attribute:  WTF::RefPtr<WebCore::TileGridTile> >}iiii}}{IntRect={IntPoint=ii}{IntSize=ii}}} */
@property unsigned int paintCount;

+ (id)layerBeingPainted;

- (id)actionForKey:(id)arg1;
- (void)drawInContext:(struct CGContext { }*)arg1;
- (void)layoutSublayers;
- (unsigned int)paintCount;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setPaintCount:(unsigned int)arg1;
- (void)setTileGrid:(struct TileGrid { struct TileCache {} *x1; struct RetainPtr<CALayer> { struct CALayer { Class x_1_2_1; struct _CALayerIvars { int x_2_3_1; unsigned int x_2_3_2; void *x_2_3_3; void *x_2_3_4[8]; } x_1_2_2; } *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; struct HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::TileGridTile> > > { struct HashTable<WebCore::IntPoint, WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> > >, WTF::IntPointHash, WTF::HashMapValueTraits<WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::TileGridTile> > >, WTF::HashTraits<WebCore::IntPoint> > { struct KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_6_1_1; } x6; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_7_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_7_1_2; } x7; }*)arg1;
- (struct TileGrid { struct TileCache {} *x1; struct RetainPtr<CALayer> { struct CALayer { Class x_1_2_1; struct _CALayerIvars { int x_2_3_1; unsigned int x_2_3_2; void *x_2_3_3; void *x_2_3_4[8]; } x_1_2_2; } *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; struct HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::TileGridTile> > > { struct HashTable<WebCore::IntPoint, WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> > >, WTF::IntPointHash, WTF::HashMapValueTraits<WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::TileGridTile> > >, WTF::HashTraits<WebCore::IntPoint> > { struct KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::TileGridTile> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_6_1_1; } x6; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_7_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_7_1_2; } x7; }*)tileGrid;

@end
