/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation
 */

@class <SBFLegibilitySettingsProviderDelegate>, NSDictionary, NSTimer, SBFLockScreenSimpleDateFormatter, UIImage, _UILegibilitySettings;

@interface SBFWallpaperPreviewViewController : UIViewController <SBFWallpaperViewLegibilityObserver, SBFLegibilitySettingsProvider> {
    BOOL _allowScrolling;
    BOOL _colorSamplingEnabled;
    SBFLockScreenSimpleDateFormatter *_dateFormatter;
    NSTimer *_dateTimer;
    <SBFLegibilitySettingsProviderDelegate> *_delegate;
    NSDictionary *_proceduralWallpaper;
    NSDictionary *_proceduralWallpaperOptions;
    UIImage *_wallpaperImage;
}

@property BOOL colorSamplingEnabled;
@property <SBFLegibilitySettingsProviderDelegate> * delegate;
@property(readonly) _UILegibilitySettings * legibilitySettings;
@property(readonly) UIImage * wallpaperImage;

- (id)_backdropWallpaperView;
- (id)_dateView;
- (id)_previewView;
- (id)_proceduralWallpaperViewWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_startDateTimer;
- (void)_stopDateTimer;
- (void)_updateDateView;
- (id)_wallpaperView;
- (id)_wallpaperViewWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)colorSamplingEnabled;
- (void)dealloc;
- (id)delegate;
- (id)initWithColorSamplingEnabled:(BOOL)arg1;
- (id)initWithImage:(id)arg1;
- (id)initWithMagicWallpaper:(id)arg1 options:(id)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithScrollableImage:(id)arg1;
- (id)legibilitySettings;
- (void)loadView;
- (void)setColorSamplingEnabled:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)updateLegibilitySettingsForAverageColor:(id)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewWillDisappear:(BOOL)arg1;
- (id)wallpaperImage;
- (void)wallpaperView:(id)arg1 legibilitySettingsDidChange:(id)arg2;

@end
