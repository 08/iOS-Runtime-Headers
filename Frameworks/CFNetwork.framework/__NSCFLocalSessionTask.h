/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSData, NSInputStream, NSObject<OS_dispatch_data>, NSObject<OS_dispatch_source>, NSString, NSURL, __NSCFLocalSessionBridge, __NSCFURLSession;

@interface __NSCFLocalSessionTask : __NSCFURLSessionTask {
    id _async_initialization;
    __NSCFLocalSessionBridge *_bridge;
    struct _CFURLConnection { } *_cfConn;
    id _dataTaskCompletion;
    NSObject<OS_dispatch_data> *_dataTaskData;
    BOOL _didIssueDidFinish;
    NSString *_duetAccountedBundleID;
    BOOL _duetAccountingIsDiscretionary;
    NSObject<OS_dispatch_data> *_pendingResponseBytes;
    BOOL _pendingResponseDisposition;
    BOOL _pendingResponseDisposition_didFinish;
    NSObject<OS_dispatch_source> *_resourceTimeout;
    __NSCFURLSession *_session;
    unsigned int _suspendCount;
    NSData *_uploadData;
    NSInputStream *_uploadDataStream;
    NSURL *_uploadFile;
}

@property(copy) id async_initialization;
@property(retain) __NSCFLocalSessionBridge * bridge;
@property(retain) struct _CFURLConnection { }* cfConn;
@property(copy) id dataTaskCompletion;
@property(retain) NSObject<OS_dispatch_data> * dataTaskData;
@property BOOL didIssueDidFinish;
@property(retain) NSString * duetAccountedBundleID;
@property BOOL duetAccountingIsDiscretionary;
@property(retain) NSObject<OS_dispatch_data> * pendingResponseBytes;
@property BOOL pendingResponseDisposition;
@property BOOL pendingResponseDisposition_didFinish;
@property(retain) NSObject<OS_dispatch_source> * resourceTimeout;
@property(retain) __NSCFURLSession * session;
@property unsigned int suspendCount;
@property(retain) NSData * uploadData;
@property(retain) NSInputStream * uploadDataStream;
@property(retain) NSURL * uploadFile;

- (void)_onqueue_completeInitialization;
- (void)_onqueue_connection_cancel;
- (void)_onqueue_connection_resume;
- (void)_onqueue_connection_suspend;
- (void)_onqueue_didFinishWithError:(id)arg1;
- (void)_onqueue_didReceiveChallenge:(id)arg1 request:(id)arg2 withCompletion:(id)arg3;
- (void)_onqueue_didReceiveDispatchData:(id)arg1;
- (void)_onqueue_didReceiveResponse:(id)arg1 redirectRequest:(id)arg2 withCompletion:(id)arg3;
- (void)_onqueue_didReceiveResponse:(id)arg1;
- (void)_onqueue_didSendBodyBytes:(long long)arg1 totalBytesSent:(long long)arg2 totalBytesExpectedToSend:(long long)arg3;
- (void)_onqueue_issue_cancel_error:(id)arg1;
- (void)_onqueue_needNewBodyStream:(id)arg1 withCompletion:(id)arg2;
- (id)_onqueue_strippedMutableRequest;
- (void)_onqueue_willCacheResponse:(id)arg1 withCompletion:(id)arg2;
- (void)_private_onqueue_didReceiveResponseDisposition:(int)arg1;
- (void)_task_onqueue_didFinish;
- (void)_task_onqueue_didReceiveDispatchData:(id)arg1;
- (id)async_initialization;
- (id)bridge;
- (void)cancel0:(bool)arg1 forcedError:(id)arg2;
- (void)cancel;
- (void)cancel_with_error:(id)arg1;
- (void)cancel_without_error;
- (id)canceledError;
- (struct _CFURLConnection { }*)cfConn;
- (id)dataTaskCompletion;
- (id)dataTaskData;
- (void)dealloc;
- (id)description;
- (BOOL)didIssueDidFinish;
- (id)duetAccountedBundleID;
- (BOOL)duetAccountingIsDiscretionary;
- (id)error:(id)arg1 code:(int)arg2;
- (id)initWithSession:(id)arg1 request:(id)arg2 ident:(unsigned int)arg3 bridge:(id)arg4;
- (id)initWithTask:(id)arg1;
- (id)nsurlError:(int)arg1;
- (id)pendingResponseBytes;
- (BOOL)pendingResponseDisposition;
- (BOOL)pendingResponseDisposition_didFinish;
- (id)posixError:(int)arg1;
- (id)resourceTimeout;
- (void)resume;
- (id)session;
- (void)setAsync_initialization:(id)arg1;
- (void)setBridge:(id)arg1;
- (void)setCfConn:(struct _CFURLConnection { }*)arg1;
- (void)setConnection:(struct _CFURLConnection { }*)arg1;
- (void)setDataTaskCompletion:(id)arg1;
- (void)setDataTaskData:(id)arg1;
- (void)setDidIssueDidFinish:(BOOL)arg1;
- (void)setDuetAccountedBundleID:(id)arg1;
- (void)setDuetAccountingIsDiscretionary:(BOOL)arg1;
- (void)setPendingResponseBytes:(id)arg1;
- (void)setPendingResponseDisposition:(BOOL)arg1;
- (void)setPendingResponseDisposition_didFinish:(BOOL)arg1;
- (void)setResourceTimeout:(id)arg1;
- (void)setSession:(id)arg1;
- (void)setSuspendCount:(unsigned int)arg1;
- (void)setUploadData:(id)arg1;
- (void)setUploadDataStream:(id)arg1;
- (void)setUploadFile:(id)arg1;
- (void)startDuetAccountingForBundleID:(id)arg1 isDiscretionary:(BOOL)arg2;
- (void)stopDuetAccounting;
- (void)suspend;
- (unsigned int)suspendCount;
- (id)timeoutError;
- (id)uploadData;
- (id)uploadDataStream;
- (id)uploadFile;

@end
