/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 */

@class NSError, NSString, NSURLRequest, NSURLResponse;

@interface __NSCFURLSessionTask : NSObject <NSSecureCoding, NSCopying> {
    long long _countOfBytesExpectedToReceive;
    long long _countOfBytesExpectedToSend;
    long long _countOfBytesReceived;
    long long _countOfBytesSent;
    NSURLRequest *_currentRequest;
    NSError *_error;
    NSURLRequest *_originalRequest;
    NSURLResponse *_response;
    double _startTime;
    int _state;
    NSString *_taskDescription;
    unsigned int _taskIdentifier;
}

@property long long countOfBytesExpectedToReceive;
@property long long countOfBytesExpectedToSend;
@property long long countOfBytesReceived;
@property long long countOfBytesSent;
@property(copy) NSURLRequest * currentRequest;
@property(copy) NSError * error;
@property(copy) NSURLRequest * originalRequest;
@property(copy) NSURLResponse * response;
@property double startTime;
@property int state;
@property(copy) NSString * taskDescription;
@property unsigned int taskIdentifier;

+ (BOOL)supportsSecureCoding;

- (void)_onqueue_connection_cancel;
- (void)_onqueue_connection_resume;
- (void)_onqueue_connection_suspend;
- (void)cancel;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (long long)countOfBytesExpectedToReceive;
- (long long)countOfBytesExpectedToSend;
- (long long)countOfBytesReceived;
- (long long)countOfBytesSent;
- (id)currentRequest;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)error;
- (id)initWithCoder:(id)arg1;
- (id)initWithRequest:(id)arg1 ident:(unsigned int)arg2;
- (id)initWithTask:(id)arg1;
- (id)originalRequest;
- (id)response;
- (void)resume;
- (void)setCountOfBytesExpectedToReceive:(long long)arg1;
- (void)setCountOfBytesExpectedToSend:(long long)arg1;
- (void)setCountOfBytesReceived:(long long)arg1;
- (void)setCountOfBytesSent:(long long)arg1;
- (void)setCurrentRequest:(id)arg1;
- (void)setError:(id)arg1;
- (void)setOriginalRequest:(id)arg1;
- (void)setResponse:(id)arg1;
- (void)setStartTime:(double)arg1;
- (void)setState:(int)arg1;
- (void)setTaskDescription:(id)arg1;
- (void)setTaskIdentifier:(unsigned int)arg1;
- (double)startTime;
- (int)state;
- (void)suspend;
- (id)taskDescription;
- (unsigned int)taskIdentifier;

@end
